b main
r
ni
r
a
q
b main
r
ni
s
q
q
b *0x8048a53
r
ni
q
ni
ni
q
b * 0x8048a53
r
ni
q
b *0x8048a53
r
q
b main
r
ni
1
q
b main
r
ni
1
q
q
r
q
b main
r
ni
i
ni
q
b main
r
ni
q
b main
r
ni
2
q
b main
r
set follow-fork-mode parent
ni
q
b main
r
r
ni
2
2
1
set follow-fork-mode parent
r
ni
ni
r
set follow-fork-mode child
r
q
set follow-fork-mode child
q
set follow-fork-mode parent
b main
r
ni
q
set follow-fork-mode parent
b program
r
ni
ni
si
ni
ni
ni
x/2gx 0xf7ffd590
x/2gx 0xf7fdbe16
x/2gx 0x252e7825
x/2gx 0x78252e78
x/2gx 0x78252e78
x/2gx 0xf7fca750
x/2gx 0xf7fbb580
q
set follow-fork-mode parent
b monkey
info function
b program
b flag
r
ni
c
ni
ni
ni
r
ni
ni
q
set follow-fork-mode parent
b program 
r
ni
ni
r
ni
ni
r
ni
ni
q
b program
set follow-fork-mode parent
r
ni
ni
q
b main
set follow-fork-mode parent
r
ni
set follow-fork-mode parent
b program
r
ni
x/10gx 0xf7fbb580
x/2gx 0xf7fca750
b program
b flag
r
b program
set follow-fork-mode parent
r
q
set follow-fork-mode parent
b flag
b program
r
x/1gx 0x3132000a
ni
x/1gx 0x3132000a
cat monkey.c
q
b flag
info function
b change_name
b program

set follow-fork-mode parent
r
q
set follow-fork-mode parent
b flag
b program
b main
info function
b change_name 
r
c
ni
ni
x/gx $ebp
x/gx $ebp+8
r
c
x/gx $ebp+8
q
